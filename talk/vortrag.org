What the heck should be in there. Let's draft up an outline.

* Intro
** Importance of MC Methods :SHORT:
 - important tool in particle physics
   - not just numerical
 - somewhat romenatic: distilling information with entropy
 - validation of new theories
   - some predictions are often more subtle than just the existense of
     new particles
   - backgrounds have to be substracted
** Diphoton Process
 - feynman diags and reaction formula
 - higgs decay channel
 - dihiggs decay
 - pure QED
* Calculation of the XS :TOO_LONG:
** Approach
 - formalism well separated from underlying theory
   - but can fool intuition (spin arguments)
   - in the course of semester: learned more about the theory :)
 - translating feynman diagrams to abstract matrix elements straight
   forward
 - first try: casimir's trick
   - error in calculation + one identity unknown
 - second try: evaluating the matrices directly
   - discovered a lot of tricks
   - error prone
 - back to studying the formalism: completeness relation for real
   photons
   - a matter of algebraic gymnastics
   - boils down to some trace and dirac matrix gymnastics
   - mixing terms cancel out, not zero in themselves
 - resulting expression for ME essentially t/u channel propagator
   (1/(t*u)) and spin correlation 1 + cos(x)^2
 - only angular dependencies, no kinematics, "nice" factors
 - symmetric in θ
** Result + Sherpa
 - apply the golden rule for 2->2 processes
 - show plots and total xs
 - shape verified later -> we need sampling techniques first
* Monte Carlo Methods
 - one simple idea, can be exploited and refined
 - how to extract information from a totally unknown function
   - look at it -> random points are the most "symmetric" choice
   - statistics to the rescue
 - what does this have to do with minecraft

** Integration
 - integration as mean value
 - convergence due to law of large numbers
   - independent of dimension
   - trivially parallelism
 - result normal distributed with σ due to central limit theorem
 - goal: speeding up convergence
   1. modify distribution
   2. integration variable
   3. subdivide integration volume
 - all those methods can be somewhat intertwined
 - focus on some simple methods

*** Naive Integration
 - why mix in that distribution: we choose it uniform
 - integral is mean
 - variance is variance of function: stddev linear in Volume!
 - include result
 - rediculous sample size

**** TODO compare to other numeric

*** Change of Variables
 - drastic improvement by transf. to η
 - only works by chance (more or less)
   - pseudo rapidity eats up angular divergence
 - can be shown: same effect as propability density
 - implementation is different

*** VEGAS
 - a simple ρ: step function on hypercubes, can be trivially generated
 - effectively subdividing the integration volume
 - optimal: same variance in every cube
 - easier to optimize: approximate optimal rho by step function
 - clarify: use rectangular grid and blank out unwated edges with θ
   function
 - nice feature: integrand does not have to be smooth :)
 - similar efficiency as the travo case
   - but a lot of room for parameter adjustment and tuning

**** TODO research the drawbacks that led to VEGAS
**** TODO nice visualization of vegas working
**** TODO look at original vegas
   - in 70s/80s memory a constraint

** Samplingu
*** Method X
**** Basic Ideas
**** Implementation and Results
** Outlook
*** Multichannel
*** TODO Other modern Stuff

* Toy Event Generator
** Basics :SHORT:
** Implementation
** Results

* Pheno Stuff
** Shortcomings of the Toy Generator
** Short review of HO Effects
** Presentation and Discussion of selected Histograms

* Wrap-Up
** Summary
** Lessons Learned (if any)
** Outlook
